<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" x:Name="Dashboard" 
    Title="CAPS Health Check Dashboard" Height="768" Width="1024" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
	<Window.Background>
        <LinearGradientBrush StartPoint='0,0' EndPoint='0,1'>
            <LinearGradientBrush.GradientStops> <GradientStop Color='#C4CBD8' Offset='0' /> <GradientStop Color='#E6EAF5' Offset='0.2' /> 
            <GradientStop Color='#CFD7E2' Offset='0.9' /> <GradientStop Color='#C4CBD8' Offset='1' /> </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
    </Window.Background> 
    <Window.Resources>        
        <DataTemplate x:Key="HeaderTemplate">
            <DockPanel>
                <TextBlock FontSize="10" Foreground="Green" FontWeight="Bold" >
                    <TextBlock.Text>
                        <Binding/>
                    </TextBlock.Text>
                </TextBlock>
            </DockPanel>
        </DataTemplate>            
    </Window.Resources>    
    <Grid x:Name = 'Grid' ShowGridLines = 'false'>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height = 'Auto'/>
            <RowDefinition Height = 'Auto'/>
            <RowDefinition Height = '*'/>
            <RowDefinition Height = 'Auto'/>
            <RowDefinition Height = 'Auto'/>
            <RowDefinition Height = 'Auto'/>
        </Grid.RowDefinitions>
		<Grid Grid.Row = '1' Grid.Column = '0' ShowGridLines = 'false'>
			<Grid.ColumnDefinitions>
                <ColumnDefinition Width="110"/>
				<ColumnDefinition Width="110"/>
                <ColumnDefinition Width="190"/>
				<ColumnDefinition Width="190"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="110"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="RefreshButton" Content="Refresh" BorderThickness="0" Width="100" Grid.Column = '0'>
                <Button.Background>
                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}"/>
                </Button.Background>
            </Button>
			<Button x:Name="DetailsButton" Content="Show Details" IsEnabled="False" BorderThickness="0" Width="100" Grid.Column = '1'>
                <Button.Background>
                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}"/>
                </Button.Background>
            </Button>
			<Button x:Name="WindowsOperMenuButton" BorderThickness="0" Width="180" Grid.Column = '2'>
                <Button.Background>
                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}"/>
                </Button.Background>
				<StackPanel Orientation="Horizontal">
					<Image Source="D:\CAPS\APP\Dashboard\Dev\Windows.jpg" />
					<TextBlock VerticalAlignment="Center">Windows Operator Menu</TextBlock>
				</StackPanel>
            </Button>
			<Button x:Name="UNIXOperMenuButton" BorderThickness="0" Width="180" Grid.Column = '3'>
                <Button.Background>
                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}"/>
                </Button.Background>
				<StackPanel Orientation="Horizontal">
					<Image Source="D:\CAPS\APP\Dashboard\Dev\AIX.jpg" />
					<TextBlock VerticalAlignment="Center">UNIX Operator Menu</TextBlock>
				</StackPanel>
            </Button>
			<Button x:Name="ExitButton" Content="Exit" BorderThickness="0" Width="100" HorizontalAlignment="Right" Grid.Column = '5'>
                <Button.Background>
                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveCaptionTextColorKey}}"/>
                </Button.Background>
            </Button>
		</Grid>
        <Grid Grid.Row = '2' Grid.Column = '0' ShowGridLines = 'false'>  
            <Grid.Resources>
                <Style x:Key="AlternatingRowStyle" TargetType="{x:Type Control}" >
                    <Setter Property="Background" Value="LightGray"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">                            
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="Foreground" Value="Black"/>                                
                        </Trigger>                            
                    </Style.Triggers>
                </Style>                    
            </Grid.Resources>                  
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height = 'Auto'/>
                <RowDefinition Height = 'Auto'/>
                <RowDefinition Height = '*'/>
                <RowDefinition Height = '*'/>
                <RowDefinition Height = 'Auto'/>
                <RowDefinition Height = 'Auto'/>
                <RowDefinition Height = 'Auto'/>
            </Grid.RowDefinitions> 
            <GroupBox Header = "Health Check Tasks" Grid.Column = '0' Grid.Row = '2' Grid.ColumnSpan = '11' Grid.RowSpan = '3'>
			<Grid Width = 'Auto' Height = 'Auto' ShowGridLines = 'false'>
                <DataGrid
				AutoGenerateColumns="False"
				IsReadOnly="True"
				Name="StatusDataGrid"
				ItemsSource="{Binding}"
				SelectionMode="Extended"
				RowDetailsVisibilityMode="Collapsed"
				ScrollViewer.CanContentScroll="True"
				ScrollViewer.VerticalScrollBarVisibility="Auto"
				ScrollViewer.HorizontalScrollBarVisibility="Auto">
			
				<DataGrid.RowDetailsTemplate>
					<DataTemplate>
					<ScrollViewer Height="150" Width="980">
						<TextBox
							IsReadOnly="True"
							TextWrapping="Wrap"
							FontFamily="Lucida Console"
							Text="{Binding Path=Notes}">
							<TextBox.Style>
								<Style TargetType="TextBox">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate>
												<Border x:Name="PART_ContentHost" />
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</TextBox.Style>
						</TextBox>
					</ScrollViewer>
					</DataTemplate>
				</DataGrid.RowDetailsTemplate>
		
				<DataGrid.Columns>
					<DataGridTextColumn Binding="{Binding Path=ID}" Header="ID" Width="30"/>
					<DataGridTextColumn Binding="{Binding Path=Platform}" Header="Platform" Width="80"/>
					<DataGridTextColumn Binding="{Binding Path=Server}" Header="Server" Width="100"/>
					<DataGridTextColumn Binding="{Binding Path=Application}" Header="Application" Width="180"/>
					<DataGridTextColumn Binding="{Binding Path=Component}" Header="Component" Width="180"/>
					<DataGridTemplateColumn Header="Status" Width="150">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate >
								<Border x:Name="brdService" VerticalAlignment="Stretch" Margin="1">
									<TextBlock Text="{Binding Status}" Margin="3,1" x:Name="txtServiceState"/>
								</Border>
								<DataTemplate.Triggers>
									<DataTrigger Binding="{Binding Status}" Value="Normal">
										<Setter TargetName="brdService" Property="Background" Value="Green"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
									</DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="Error">
										<Setter TargetName="brdService" Property="Background" Value="Red"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
									</DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="consistent_synchronized">
										<Setter TargetName="brdService" Property="Background" Value="Green"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
                        		    </DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="idle">
										<Setter TargetName="brdService" Property="Background" Value="Red"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
                        		    </DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="Running">
										<Setter TargetName="brdService" Property="Background" Value="Green"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
                        		    </DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="Started">
										<Setter TargetName="brdService" Property="Background" Value="Green"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
                        		    </DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="Stopped">
										<Setter TargetName="brdService" Property="Background" Value="Red"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
                        		    </DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="Exists">
										<Setter TargetName="brdService" Property="Background" Value="Green"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
                        		    </DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="Not exist">
										<Setter TargetName="brdService" Property="Background" Value="Red"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
                        		    </DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="Online">
										<Setter TargetName="brdService" Property="Background" Value="Green"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
                        		    </DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="Offline">
										<Setter TargetName="brdService" Property="Background" Value="Red"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
                        		    </DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="Ready">
										<Setter TargetName="brdService" Property="Background" Value="Green"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
                        		    </DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="Disabled">
										<Setter TargetName="brdService" Property="Background" Value="Red"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="White"/>
                        		    </DataTrigger>
									<DataTrigger Binding="{Binding Status}" Value="Performing health check">
										<Setter TargetName="brdService" Property="Background" Value="Yellow"/>
										<Setter TargetName="txtServiceState" Property="Foreground" Value="Black"/>
                        		    </DataTrigger>
								</DataTemplate.Triggers>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
					<DataGridTextColumn Binding="{Binding Path=Remark}" Header="Remark" Width="255"/>
				</DataGrid.Columns>
			</DataGrid>                
                </Grid>
            </GroupBox>                                    
        </Grid>        
        <ProgressBar x:Name = 'ProgressBar' Grid.Row = '3' Height = '20'/>   
        <TextBox x:Name = 'StatusTextBox' Grid.Row = '4'/>                           
    </Grid>
</Window>